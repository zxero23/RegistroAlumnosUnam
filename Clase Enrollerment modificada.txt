package Lector;

import com.digitalpersona.onetouch.*;
import com.digitalpersona.onetouch.processing.*;
import java.awt.*;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class EnrollmentForm extends CaptureForm {

    private File file;
    private DPFPEnrollment enroller = DPFPGlobal.getEnrollmentFactory().createEnrollment();
    private DPFPTemplate templateFinal;

    EnrollmentForm(Frame owner) {
        super(owner);
    }

    public class TemplateFileFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File f) {
            return f.getName().endsWith(".fpt");
        }

        @Override
        public String getDescription() {
            return "Fingerprint Template File (*.fpt)";
        }
    }

    @Override
    public void init() {
        super.init();
        this.setTitle("Fingerprint Enrollment");
        updateStatus();
    }

    @Override
    public void process(DPFPSample sample) {
        super.process(sample);
        // Process the sample and create a feature set for the enrollment purpose.
        DPFPFeatureSet features = extractFeatures(sample, DPFPDataPurpose.DATA_PURPOSE_ENROLLMENT);
        // Check quality of the sample and add to enroller if it's good
        if (features != null) {
            try {
                makeReport("Se creo las caracteristicas de la huella.");
                enroller.addFeatures(features);// Add feature set to template.
                if (enroller.getFeaturesNeeded() == 0) {
                    //fin del metodo de subscripcion
                    //templateFinal = enroller.getTemplate();
                    //Abre cuadro de dialogo
                    this.onSave();
                    //this.guardarImagen();
                    this.guardarPath();
                }
            } catch (DPFPImageQualityException ex) {
            } finally {
                if (!(getPrompt().getText().isEmpty())) {
                    updateStatus();

                    // Check if template has been created.
                    switch (enroller.getTemplateStatus()) {
                        case TEMPLATE_STATUS_READY:	// report success and stop capturing
                            stop();
                            ((MainForm) getOwner()).setTemplate(enroller.getTemplate());
//                        setPrompt("Click Close, and then click Fingerprint Verification.");
                            break;

                        case TEMPLATE_STATUS_FAILED:	// report failure and restart capturing
                            enroller.clear();
                            stop();
                            updateStatus();
                            ((MainForm) getOwner()).setTemplate(null);
                            JOptionPane.showMessageDialog(EnrollmentForm.this, "The fingerprint template is not valid. Repeat fingerprint enrollment.", "Fingerprint Enrollment", JOptionPane.ERROR_MESSAGE);
                            start();
                            break;
                    }
                } else {
                    JOptionPane.showMessageDialog(EnrollmentForm.this, "No se ha ingresado ningún numero de legajo", "Fingerprint Enrollment", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    private void updateStatus() {
        // Show number of samples needed.
        setStatus(String.format("Muestras de huellas digitales necesarias: %1$s", enroller.getFeaturesNeeded()));
    }

    public DPFPTemplate getTemplate() {
        return templateFinal;
    }

    public void onSave() {
        File path = new File("D:/Mis Documentos/Huellas/");
        JFileChooser chooser = new JFileChooser(path);
        chooser.addChoosableFileFilter(new TemplateFileFilter());

        while (true) {
            if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                try {
                    file = chooser.getSelectedFile();
                    if (!file.toString().toLowerCase().endsWith(".fpt")) {
                        file = new File(file.toString() + ".fpt");
                    }
                    if (file.exists()) {
                        int choice = JOptionPane.showConfirmDialog(this,
                                String.format("File \"%1$s\" already exists.\nDo you want to replace it?", file.toString()),
                                "Fingerprint saving",
                                JOptionPane.YES_NO_CANCEL_OPTION);
                        if (choice == JOptionPane.NO_OPTION) {
                            continue;
                        } else if (choice == JOptionPane.CANCEL_OPTION) {
                            break;
                        }
                    }
                    FileOutputStream stream = new FileOutputStream(file);
                    stream.write(enroller.getTemplate().serialize());
                    stream.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Fingerprint saving", JOptionPane.ERROR_MESSAGE);
                }
            }
            break;
        }
        //   guardarPath();
    }

    public void indexarHuella() {
    }

    private void guardarPath() {

        try {
            //Carga el driver ODBC
            Class.forName("org.postgresql.Driver");
            //Se conecta a la bd
            Connection dbConnection = DriverManager.getConnection("jdbc:postgresql://localhost/huellasDigitales", "postgres", "admin");

            Statement stm = dbConnection.createStatement();

            Statement maxId = dbConnection.createStatement();

            PreparedStatement ps = dbConnection.prepareStatement("INSERT INTO datos(legajo,huella_path) VALUES (?,?)");
            ps.setString(1, getPrompt().getText());
            ps.setString(2, file.getName());
            ps.executeUpdate();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
